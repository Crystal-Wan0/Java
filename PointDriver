/*
* MyPointDriver.java
*
* This program is a driver class for MyPoint and shape objects. Call every methods that are
* created in the MyPoint class.
*
* Yifen Wan, 1693203
* Last updated: 10/05/21
*/

import java.util.ArrayList;
import java.util.concurrent.ThreadLocalRandom;

public class MyPointDriver {
  public static void main(String[] args) {
    // create two Point objects
    MyPoint p1 = new MyPoint();
    p1.setX(5);
    p1.setY(10);

    MyPoint p2 = new MyPoint(3, 2);

    // print each point
    System.out.println("p1 is " + p1);
    System.out.println("p2 is " + p2);

    System.out.println("Distance between p1 and p2: " + p1.distanceBetween(p2)); // result should be: 8.246211ï¿½

    // 2.
    ArrayList<MyPoint> list = createPointList();
    System.out.println(list.toString());

    int closestIndex = findClosestToOrigin(list);
    System.out.println("The point closest to (0, 0) is : " + list.get(closestIndex));

    // 4.
    Shape s1 = new Shape(p1, "blue");
    Shape s2 = new Shape(p2, "purple");

    System.out.println("s1 is " + s1);
    System.out.println("s2 is " + s2);

    System.out.println("Distance between the centers of s1 and s2: " + s1.distanceBetweenCenters(s2));
  } // end main

  private static ArrayList<MyPoint> createPointList() {
    ArrayList<MyPoint> list = new ArrayList<>();
    int count = 10;
    int min = -20, max = 20;

    // create points out of (-20~20, -20~20) range
    for (int i = 0; i < count; i++) {
      int x = ThreadLocalRandom.current().nextInt(min, max + 1);
      int y = ThreadLocalRandom.current().nextInt(min, max + 1);
      list.add(new MyPoint(x, y));
    }
    return list;
  }

  public static int findClosestToOrigin(ArrayList<MyPoint> list) {
    MyPoint origin = new MyPoint(0, 0);
    int closestIndex = 0;

    for (int i = 0; i < list.size(); i++) {
      if (list.get(i).distanceBetween(origin) < list.get(closestIndex).distanceBetween(origin))
        closestIndex = i;
    }
    return closestIndex;
  }
} // end driver class
